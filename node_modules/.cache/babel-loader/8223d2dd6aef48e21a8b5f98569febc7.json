{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/pro/src/components/adminList/ServerLinkList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport axios from '../interceptors/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ServerLinkList(props) {\n  _s();\n\n  const [serverData, setServerData] = useState([]);\n  const getAllData = useCallback(async () => {\n    axios.get(`ServerLink/${props.id}`).then(res => res.data).then(res => {\n      setServerData(res);\n    });\n  });\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const handleEdit = (element, index) => {\n    setServerData(current => current.map((a, b) => {\n      if (b == index) {\n        props.setServerIp(a.serverIp);\n        props.setServerPort(a.serverPort);\n        props.setServerTypeName(a.serverTypeName);\n      }\n\n      return a;\n    }));\n  };\n\n  const handleUpdateServerLink = (element, index) => {\n    axios.put(`ServerLink`, {\n      serverlinkId: serverData[index].serverlinkId,\n      projectId: props.id,\n      serverIp: props.serverIp,\n      serverPort: props.serverPort,\n      serverTypeName: props.serverTypeName\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n    props.setServerIp(\"\");\n    props.setServerPort(\"\");\n    props.setServerTypeName(\"\");\n  };\n\n  const handleDelete = index => {\n    axios.delete(`ServerLink/${index.serverlinkId}`).then(response => setServerData(serverData.filter(a => a.serverlinkId !== index.serverlinkId)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generalInfoAdmin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"limiter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-table10\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-table100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table100\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"table100-head\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"column1\",\n                    children: \"ServerIP\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"column2\",\n                    children: \"Server Port\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"column3\",\n                    children: \"Server Type Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"column4\",\n                    children: \"Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: serverData.map((a, b) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"column1\",\n                    children: a.serverIp\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"column2\",\n                    children: a.serverPort\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"column3\",\n                    children: a.serverTypeName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"column7\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"edit-generalinfo-btn\",\n                      onClick: e => handleEdit(a, b),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"delete-generalinfo-btn\",\n                      onClick: e => {\n                        if (window.confirm('Are you sure to delete!?')) handleDelete(a, b);\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"update-generalinfo-btn\",\n                      onClick: e => handleUpdateServerLink(a, b),\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 45\n                  }, this)]\n                }, b, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ServerLinkList, \"EsV9L6HmSqkT8v22tIl2fRgDGJw=\");\n\n_c = ServerLinkList;\nexport default _c2 = /*#__PURE__*/React.memo(ServerLinkList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ServerLinkList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","axios","ServerLinkList","props","serverData","setServerData","getAllData","get","id","then","res","data","handleEdit","element","index","current","map","a","b","setServerIp","serverIp","setServerPort","serverPort","setServerTypeName","serverTypeName","handleUpdateServerLink","put","serverlinkId","projectId","response","console","log","error","handleDelete","delete","filter","e","window","confirm","memo"],"sources":["/Users/admin/Downloads/pro/src/components/adminList/ServerLinkList.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport axios from '../interceptors/axios'\r\n\r\n\r\n\r\nfunction ServerLinkList(props) {\r\n    const [serverData, setServerData] = useState([])\r\n\r\n    const getAllData = useCallback(async () => {\r\n        axios.get(`ServerLink/${props.id}`)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                setServerData(res)\r\n            })\r\n    })\r\n    useEffect(() => {\r\n        getAllData()\r\n    }, [])\r\n\r\n    const handleEdit = (element, index) => {\r\n        setServerData(\r\n            current => current.map((a, b) => {\r\n                if (b == index) {\r\n                    props.setServerIp(a.serverIp)\r\n                    props.setServerPort(a.serverPort)\r\n                    props.setServerTypeName(a.serverTypeName)\r\n                }\r\n                return a\r\n            })\r\n        )\r\n    }\r\n    const handleUpdateServerLink = (element, index) => {\r\n        axios.put(`ServerLink`,\r\n            {\r\n                    serverlinkId: serverData[index].serverlinkId,\r\n                    projectId: props.id,\r\n                    serverIp: props.serverIp,\r\n                    serverPort: props.serverPort,\r\n                    serverTypeName: props.serverTypeName\r\n            }\r\n                )\r\n                    .then((response) => {\r\n                        console.log(response);\r\n                    }, (error) => {\r\n                        console.log(error);\r\n                    });\r\n                        props.setServerIp(\"\")\r\n                        props.setServerPort(\"\")\r\n                        props.setServerTypeName(\"\")\r\n              }\r\n\r\n    const handleDelete = (index) => {\r\n        axios.delete(`ServerLink/${index.serverlinkId}`)\r\n            .then(response => setServerData(serverData.filter((a) => a.serverlinkId !== index.serverlinkId)))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='generalInfoAdmin'>\r\n            <div className=\"limiter\">\r\n                <div className=\"container-table10\">\r\n                    <div className=\"wrap-table100\">\r\n                        <div className=\"table100\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr className=\"table100-head\">\r\n                                        <th className=\"column1\">ServerIP</th>\r\n                                        <th className=\"column2\">Server Port</th>\r\n                                        <th className=\"column3\">Server Type Name</th>\r\n                                        <th className='column4'>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {serverData.map((a, b) => (\r\n                                        <tr key={b}>\r\n                                            <td className=\"column1\">{a.serverIp}</td>\r\n                                            <td className=\"column2\">{a.serverPort}</td>\r\n                                            <td className=\"column3\">{a.serverTypeName}</td>\r\n                                            <td className=\"column7\">\r\n                                                <button className=\"edit-generalinfo-btn\" onClick={(e) => handleEdit(a, b)}>Edit</button>\r\n                                                <button className='delete-generalinfo-btn' onClick={ (e) => {if(window.confirm('Are you sure to delete!?'))handleDelete(a, b)}}>Delete</button>\r\n                                                <button className=\"update-generalinfo-btn\" onClick={(e) => handleUpdateServerLink(a, b)}>Update</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(ServerLinkList)"],"mappings":"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"},"metadata":{},"sourceType":"module"}